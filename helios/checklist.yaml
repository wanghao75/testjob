domain:                              # 域名配置，如存在多个域名则填写多个
- test.test-merge.cn                                     # 服务域名
                                     # 服务域名
project: helios-server-test                             # 项目名
namespace: helios-server-test                          # 服务命名空间,与project保持一致
replicas: 1                           # 服务副本数
serviceExportType: Ingress                  # 服务对外暴露类型， NodePort， LoadBalancer， Ingress， 使用NodePort
#nodePort:                            # 当服务对外暴露类型为NodePort时使用，nodePort端口范围30000-32767，一个端口对应一个服务,规范：80:30000(服务端口:nodePort端口)，非NodePort则去除此项
ingress-controller: nginx                 # 如需要对外暴露服务，且当对外暴露服务类型为Ingress时使用，非Ingress则去除此项
community: openeuler                          # 服务归属的社区，如openeuler，mindspore，openlookeng，opengauss

# 如服务有依赖其他多个服务，则需要增加多个containers下的服务配置块
containers:
  - name: helios                           # 容器名称
    args:                            # 容器内代码运行所需参数
    image: swr.cn-north-4.myhuaweicloud.com/opensourceway/helios-server/helios-voting:master-0e6254f                          # 镜像id
    # volumeMounts:                    # 挂载
      # - mountPath:                   # 挂载路径
        # name:                        # 名称
      # - mountPath:
        # name:
        # subPath:                     # 映射卷名
      # - mountPath:                   # 配置文件路径，若无，则删除此块
        # name:                        # 配置文件名
        # readOnly:                    # 只读
    resources:                       # 资源
      requests:                      # 容器启动必需资源
        cpu: 1000m
        memory: 2000Mi
      limits:                        # 最大限制资源
        cpu: 2000m
        memory: 3000Mi
    env:                             # 环境变量
      - name: GH_CLIENT_ID                       # 变量名
        valueFrom: 
          secretKeyRef:
            key: GH_CLIENT_ID                    # 变量名，与name的值一致
            name: helios-server-test-secrets                   # secret文件名，如不设置，后续均不设置，系统会进行默认生成，如要自行设置，则所有的值保持一致
    command:                         # 容器启动时所需的命令
    readinessProbe:                  # 容器就绪探针定义
      tcpSocket:
        port:                       # 监听端口，与容器暴露端口一致
      initialDelaySeconds: 10
      failureThreshold: 3
      successThreshold: 1
      periodSeconds: 10
      timeoutSeconds: 5
    livenessProbe:                   # 容器存活探针定义
      tcpSocket:
        port:                        # 监听端口，与容器暴露端口一致
      initialDelaySeconds: 20
      periodSeconds: 20
      successThreshold: 1
      failureThreshold: 3
      timeoutSeconds: 5
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 8080                # 容器暴露的端口
      name: http
      protocol: TCP
